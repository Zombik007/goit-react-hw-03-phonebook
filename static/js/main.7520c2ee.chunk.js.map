{"version":3,"sources":["Phonebook/Phonebook.module.css","Phonebook/ContactForm.js","Phonebook/FilterContact.js","Phonebook/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","inputChange","e","currentTarget","value","setState","formSubmit","preventDefault","props","onSubmit","resetForm","className","styles","phonebook__form","this","phonebook__label","phonebook__input","type","pattern","title","required","onChange","phonebook__button_form","Component","FilterContact","ContactList","contacts","onDeleteContact","phonebook__list","map","id","phonebook__item","phonebook__button","onClick","App","filter","deleteContact","contactId","prevState","contact","addContactOnFormSubmit","data","uuidv4","searchFilterContact","getFilteredContacts","normalizeFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7520c2ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook__form\":\"Phonebook_phonebook__form__2y3vs\",\"phonebook__label\":\"Phonebook_phonebook__label__2j_q2\",\"phonebook__input\":\"Phonebook_phonebook__input__2mxIk\",\"phonebook__button_form\":\"Phonebook_phonebook__button_form__2VtJJ\",\"phonebook__list\":\"Phonebook_phonebook__list__2gHrk\",\"phonebook__item\":\"Phonebook_phonebook__item__3ruUJ\",\"phonebook__button\":\"Phonebook_phonebook__button__1aZzs\"};","import React, { Component } from 'react';\n\nimport styles from './Phonebook.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  formSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={styles.phonebook__form} onSubmit={this.formSubmit}>\n          <label className={styles.phonebook__label}>\n            Name\n            <input\n              className={styles.phonebook__input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.inputChange}\n            />\n          </label>\n\n          <label className={styles.phonebook__label}>\n            Number\n            <input\n              className={styles.phonebook__input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.inputChange}\n            />\n          </label>\n          <button className={styles.phonebook__button_form} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterContact = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        title=\"Search contacts\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nFilterContact.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FilterContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Phonebook.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.phonebook__list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={styles.phonebook__item} key={id}>\n            {name}: {number}\n            <button\n              className={styles.phonebook__button}\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Phonebook/ContactForm';\nimport FilterContact from './Phonebook/FilterContact';\nimport ContactList from './Phonebook/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  addContactOnFormSubmit = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  searchFilterContact = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContactOnFormSubmit} />\n\n        <h2>Contacts</h2>\n        <FilterContact\n          value={this.state.filter}\n          onChange={this.searchFilterContact}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}